% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/norm_bw.R
\name{norm_bw}
\alias{norm_bw}
\title{Generate normalized bigWig files.}
\usage{
norm_bw(
  out_dir,
  genome_assembly,
  chip_samp_binned_file,
  chip_samp_library_size,
  control_binned_file = NULL,
  control_library_size = NULL,
  use_control,
  pseudocount = NULL,
  raw_count_cutoff = NULL,
  scaling_factor = NULL
)
}
\arguments{
\item{out_dir}{Output directory for normalized bigWig files.}

\item{genome_assembly}{Must of be one of hg38 or mm10.}

\item{chip_samp_binned_file}{Binned BED file associated with the sample with ChIP-seq or Cut&Run signal.}

\item{chip_samp_library_size}{Mapped library size for the sample with ChIP-seq or Cut&Run signal.}

\item{control_binned_file}{Binned BED file associated with the control sample.}

\item{control_library_size}{Mapped library size for the control sample.}

\item{use_control}{Boolean term, whether to use a control sample or not.}

\item{pseudocount}{Pseudocount to avoid division by 0. If not defined, defaults to 1e-3.}

\item{raw_count_cutoff}{Raw read count cutoff to exclude bins depleted in signal across all tracks. For example, if 10 is inputted, this removes raw read count consistently lower than 10. Defaults to 0.}

\item{scaling_factor}{Optional: quantatitive normalization/scaling of the raw binned signal by this factor. For example, this could be ChIP-Rx values or genome-wide modification percentage values obtained from mass spectrometry values.}
}
\value{
a single bigWig file with normalized binned scores.
}
\description{
Generate bigWig files with normalized bin scores needed for subsequent functions in the package workflow.
}
\details{
Title
}
\examples{
library(tidyverse)
library(rtracklayer)
library(GenomicRanges)
library(data.table)
norm_bw(out_dir = system.file("extdata",package = "ChIPbinner"),
        genome_assembly = "hg38",
        chip_samp_binned_file = system.file("extdata", "downsampled.Cal27.WT.H3K36me2.10kb.bed.gz", package = "ChIPbinner"),
        chip_samp_library_size = 64093770,
        use_control = TRUE,
        control_binned_file = system.file("extdata", "downsampled.Cal27.WT_input.H3K36me2.10kb.bed.gz", package = "ChIPbinner"),
        control_library_size = 52047022,
        raw_count_cutoff = 0,
        pseudocount = 1e-15,
        scaling_factor = 0.450328805)
}
